{"ast":null,"code":"var _jsxFileName = \"/Users/ccy/CIS550_Group15_Movie/client/src/pages/LoginSignupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { Container, TextField, Button, Typography, Box, Alert } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nexport default function LoginSignupPage() {\n  _s();\n  const {\n    setAuthState\n  } = useAuth();\n  const [isSignup, setIsSignup] = useState(false); // Toggle between login and signup\n  const [userID, setUserID] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleToggle = () => {\n    setIsSignup(!isSignup);\n    setError(null); // Clear errors on toggle\n  };\n  const handleSubmit = async () => {\n    const route = isSignup ? '/createuser' : '/login';\n    const payload = {\n      userid: userID,\n      password\n    };\n    try {\n      const response = await fetch(`http://${config.server_host}:${config.server_port}${route}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'An error occurred');\n      }\n      if (isSignup) {\n        alert('Account created successfully! Please log in.');\n        setIsSignup(false);\n      } else {\n        alert('Login successful!');\n        localStorage.setItem('userId', data.userId); // Save user ID to localStorage\n        setAuthState({\n          userId: data.userId\n        }); // Save user ID in global state\n        navigate('/'); // Redirect to home page\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 8,\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: isSignup ? 'Sign Up' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"User ID\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: userID,\n        onChange: e => setUserID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: isSignup ? 'Sign Up' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: handleToggle,\n        children: isSignup ? 'Already have an account? Log In' : \"Don't have an account? Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginSignupPage, \"oLfFXOoiMTdSkq/gWAFKa1damJQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginSignupPage;\nvar _c;\n$RefreshReg$(_c, \"LoginSignupPage\");","map":{"version":3,"names":["React","useState","useContext","Container","TextField","Button","Typography","Box","Alert","useNavigate","useAuth","jsxDEV","_jsxDEV","config","require","LoginSignupPage","_s","setAuthState","isSignup","setIsSignup","userID","setUserID","password","setPassword","error","setError","navigate","handleToggle","handleSubmit","route","payload","userid","response","fetch","server_host","server_port","method","headers","body","JSON","stringify","data","json","ok","Error","alert","localStorage","setItem","userId","err","message","maxWidth","sx","mt","textAlign","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","display","flexDirection","gap","label","fullWidth","value","onChange","e","target","type","color","onClick","_c","$RefreshReg$"],"sources":["/Users/ccy/CIS550_Group15_Movie/client/src/pages/LoginSignupPage.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Container, TextField, Button, Typography, Box, Alert } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nconst config = require('../config.json');\n\nexport default function LoginSignupPage() {\n    const { setAuthState } = useAuth();\n    const [isSignup, setIsSignup] = useState(false); // Toggle between login and signup\n    const [userID, setUserID] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n\n    const handleToggle = () => {\n        setIsSignup(!isSignup);\n        setError(null); // Clear errors on toggle\n    };\n\n    const handleSubmit = async () => {\n        const route = isSignup ? '/createuser' : '/login';\n        const payload = { userid: userID, password };\n\n        try {\n            const response = await fetch(`http://${config.server_host}:${config.server_port}${route}`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(payload),\n            });\n\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.error || 'An error occurred');\n            }\n\n            if (isSignup) {\n                alert('Account created successfully! Please log in.');\n                setIsSignup(false);\n            } else {\n                alert('Login successful!');\n                localStorage.setItem('userId', data.userId); // Save user ID to localStorage\n                setAuthState({ userId: data.userId }); // Save user ID in global state\n                navigate('/'); // Redirect to home page\n            }\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    return (\n        <Container maxWidth=\"sm\" sx={{ mt: 8, textAlign: 'center' }}>\n            <Typography variant=\"h4\" gutterBottom>\n                {isSignup ? 'Sign Up' : 'Login'}\n            </Typography>\n\n            {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                <TextField\n                    label=\"User ID\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={userID}\n                    onChange={(e) => setUserID(e.target.value)}\n                />\n                <TextField\n                    label=\"Password\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n                    {isSignup ? 'Sign Up' : 'Login'}\n                </Button>\n                <Button color=\"secondary\" onClick={handleToggle}>\n                    {isSignup ? 'Already have an account? Log In' : \"Don't have an account? Sign Up\"}\n                </Button>\n            </Box>\n        </Container>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}