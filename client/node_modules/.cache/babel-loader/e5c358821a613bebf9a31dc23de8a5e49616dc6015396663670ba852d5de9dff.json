{"ast":null,"code":"var _jsxFileName = \"/Users/ccy/CIS550_Group15_Movie/client/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Container, Divider, Link } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport LazyTable from '../components/LazyTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nexport default function HomePage() {\n  _s();\n  // We use the setState hook to persist information across renders (such as the result of our API calls)\n  const [selectedMovieId, setSelectedMovieId] = useState(null);\n\n  // Here, we define the columns of the \"Top Movies\" table. The movieColumns variable is an array (in order)\n  // of objects with each object representing a column. Each object has a \"field\" property representing\n  // what data field to display from the raw data, \"headerName\" property representing the column label,\n  // and an optional renderCell property which given a row returns a custom JSX element to display in the cell.\n  const movieColumns = [{\n    field: 'title',\n    headerName: 'Movie Title',\n    renderCell: row => /*#__PURE__*/_jsxDEV(Link, {\n      onClick: () => setSelectedMovieId(row.movieID),\n      children: row.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 28\n    }, this) // A Link component is used just for formatting purposes\n  }, {\n    field: 'average_rating',\n    headerName: 'Rating'\n    // renderCell: (row) => <Link onClick={() => setSelectedMovieId(row.movieID)}>{row.average_rating}</Link>\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LazyTable, {\n      route: `http://${config.server_host}:${config.server_port}/top10movies`,\n      columns: movieColumns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"4uCNc4ml35AoR9VnqewIxzh9SQ8=\");\n_c = HomePage;\n;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useEffect","useState","Container","Divider","Link","NavLink","LazyTable","jsxDEV","_jsxDEV","config","require","HomePage","_s","selectedMovieId","setSelectedMovieId","movieColumns","field","headerName","renderCell","row","onClick","movieID","children","title","fileName","_jsxFileName","lineNumber","columnNumber","route","server_host","server_port","columns","_c","$RefreshReg$"],"sources":["/Users/ccy/CIS550_Group15_Movie/client/src/pages/HomePage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Container, Divider, Link } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\n\nimport LazyTable from '../components/LazyTable';\nconst config = require('../config.json');\n\nexport default function HomePage() {\n  // We use the setState hook to persist information across renders (such as the result of our API calls)\n  const [selectedMovieId, setSelectedMovieId] = useState(null);\n\n\n  // Here, we define the columns of the \"Top Movies\" table. The movieColumns variable is an array (in order)\n  // of objects with each object representing a column. Each object has a \"field\" property representing\n  // what data field to display from the raw data, \"headerName\" property representing the column label,\n  // and an optional renderCell property which given a row returns a custom JSX element to display in the cell.\n  const movieColumns = [\n    {\n      field: 'title',\n      headerName: 'Movie Title',\n      renderCell: (row) => <Link onClick={() => setSelectedMovieId(row.movieID)}>{row.title}</Link> // A Link component is used just for formatting purposes\n    },\n    {\n      field: 'average_rating',\n      headerName: 'Rating',\n      // renderCell: (row) => <Link onClick={() => setSelectedMovieId(row.movieID)}>{row.average_rating}</Link>\n    },\n  ];\n\n\n  return (\n    <Container>\n      <h2>Top Movies</h2>\n      <LazyTable route={`http://${config.server_host}:${config.server_port}/top10movies`} columns={movieColumns} />\n    </Container>\n  );\n};"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,OAAO,EAAEC,IAAI,QAAQ,eAAe;AACxD,SAASC,OAAO,QAAQ,kBAAkB;AAE1C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,MAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAG5D;EACA;EACA;EACA;EACA,MAAMc,YAAY,GAAG,CACnB;IACEC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE,aAAa;IACzBC,UAAU,EAAGC,GAAG,iBAAKX,OAAA,CAACJ,IAAI;MAACgB,OAAO,EAAEA,CAAA,KAAMN,kBAAkB,CAACK,GAAG,CAACE,OAAO,CAAE;MAAAC,QAAA,EAAEH,GAAG,CAACI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,CAAC;EAChG,CAAC,EACD;IACEX,KAAK,EAAE,gBAAgB;IACvBC,UAAU,EAAE;IACZ;EACF,CAAC,CACF;EAGD,oBACET,OAAA,CAACN,SAAS;IAAAoB,QAAA,gBACRd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBnB,OAAA,CAACF,SAAS;MAACsB,KAAK,EAAE,UAAUnB,MAAM,CAACoB,WAAW,IAAIpB,MAAM,CAACqB,WAAW,cAAe;MAACC,OAAO,EAAEhB;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpG,CAAC;AAEhB;AAACf,EAAA,CA7BuBD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA6B/B;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}