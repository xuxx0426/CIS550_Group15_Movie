{"ast":null,"code":"var _jsxFileName = \"/Users/ccy/CIS550_Group15_Movie/client/src/pages/AccountPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Box, Alert } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nexport default function AccountPage({\n  userId\n}) {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    authState,\n    setAuthState\n  } = useAuth();\n  const navigate = useNavigate();\n  const handlePasswordUpdate = async () => {\n    setSuccessMessage('');\n    setErrorMessage('');\n    if (!currentPassword || !newPassword) {\n      setErrorMessage('Both current and new passwords are required.');\n      return;\n    }\n    try {\n      const response = await fetch(`${config.server_host}:${config.server_port}/updatepassword`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userid: userId,\n          currentPassword,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'An error occurred while updating the password.');\n      }\n      setSuccessMessage('Password updated successfully!');\n      setCurrentPassword('');\n      setNewPassword('');\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  const handleLogout = () => {\n    // Clear user ID from localStorage\n    localStorage.removeItem('userId');\n\n    // Reset AuthContext\n    setAuthState({\n      userId: null\n    });\n\n    // Redirect to login page\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Account Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"User ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: userId || 'Not logged in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Update Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 32\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Current Password\",\n        type: \"password\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: currentPassword,\n        onChange: e => setCurrentPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Password\",\n        type: \"password\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handlePasswordUpdate,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(AccountPage, \"i60IngmgjzvgVGe/yn4XkbV7MRk=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AccountPage;\nvar _c;\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Box","Alert","useNavigate","useAuth","jsxDEV","_jsxDEV","config","require","AccountPage","userId","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","successMessage","setSuccessMessage","errorMessage","setErrorMessage","authState","setAuthState","navigate","handlePasswordUpdate","response","fetch","server_host","server_port","method","headers","body","JSON","stringify","userid","data","json","ok","Error","error","message","handleLogout","localStorage","removeItem","maxWidth","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","color","onClick","severity","display","flexDirection","gap","label","type","fullWidth","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/ccy/CIS550_Group15_Movie/client/src/pages/AccountPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Box, Alert } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nconst config = require('../config.json');\n\nexport default function AccountPage({ userId }) {\n    const [currentPassword, setCurrentPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const { authState, setAuthState } = useAuth();\n    const navigate = useNavigate();\n\n    const handlePasswordUpdate = async () => {\n        setSuccessMessage('');\n        setErrorMessage('');\n\n        if (!currentPassword || !newPassword) {\n            setErrorMessage('Both current and new passwords are required.');\n            return;\n        }\n\n        try {\n            const response = await fetch(`${config.server_host}:${config.server_port}/updatepassword`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    userid: userId,\n                    currentPassword,\n                    newPassword,\n                }),\n            });\n\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.error || 'An error occurred while updating the password.');\n            }\n\n            setSuccessMessage('Password updated successfully!');\n            setCurrentPassword('');\n            setNewPassword('');\n        } catch (error) {\n            setErrorMessage(error.message);\n        }\n    };\n\n    const handleLogout = () => {\n        // Clear user ID from localStorage\n        localStorage.removeItem('userId');\n\n        // Reset AuthContext\n        setAuthState({ userId: null });\n\n        // Redirect to login page\n        navigate('/login');\n    };\n\n    return (\n        <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\n            <Typography variant=\"h4\" gutterBottom>\n                Account Information\n            </Typography>\n\n            <Box sx={{ mb: 4 }}>\n                <Typography variant=\"h6\">User ID:</Typography>\n                <Typography variant=\"body1\">{userId || 'Not logged in'}</Typography>\n            </Box>\n\n            {/* Logout Button */}\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleLogout}>\n                Logout\n            </Button>\n\n            <Typography variant=\"h5\" gutterBottom>\n                Update Password\n            </Typography>\n\n            {successMessage && <Alert severity=\"success\" sx={{ mb: 2 }}>{successMessage}</Alert>}\n            {errorMessage && <Alert severity=\"error\" sx={{ mb: 2 }}>{errorMessage}</Alert>}\n\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                <TextField\n                    label=\"Current Password\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={currentPassword}\n                    onChange={(e) => setCurrentPassword(e.target.value)}\n                />\n                <TextField\n                    label=\"New Password\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={handlePasswordUpdate}>\n                    Save Changes\n                </Button>\n            </Box>\n        </Container>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}